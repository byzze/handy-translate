// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Â MODIWL
// This file is automatically generated. DO NOT EDIT

/**
 * App is a service
 * @module
 */

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Call as $Call, CancellablePromise as $CancellablePromise, Create as $Create } from "@wailsio/runtime";

/**
 * CaptureSelectedScreen 截取选中的区域
 * @param {number} startX
 * @param {number} startY
 * @param {number} width
 * @param {number} height
 * @returns {$CancellablePromise<void>}
 */
export function CaptureSelectedScreen(startX, startY, width, height) {
    return $Call.ByID(454152140, startX, startY, width, height);
}

/**
 * GetToolBarPinned 获取工具栏固定状态
 * @returns {$CancellablePromise<boolean>}
 */
export function GetToolBarPinned() {
    return $Call.ByID(2117588528);
}

/**
 * GetTransalteMap 获取所有翻译配置
 * @returns {$CancellablePromise<string>}
 */
export function GetTransalteMap() {
    return $Call.ByID(3159850429);
}

/**
 * GetTransalteWay 获取当前翻译的服务
 * @returns {$CancellablePromise<string>}
 */
export function GetTransalteWay() {
    return $Call.ByID(3877427008);
}

/**
 * Hide 通过名字控制窗口事件
 * @param {string} windowName
 * @returns {$CancellablePromise<void>}
 */
export function Hide(windowName) {
    return $Call.ByID(3538035797, windowName);
}

/**
 * MyFetch URl
 * @param {string} URL
 * @param {{ [_: string]: any }} content
 * @returns {$CancellablePromise<any>}
 */
export function MyFetch(URL, content) {
    return $Call.ByID(2071126117, URL, content);
}

/**
 * SetToolBarPinned 设置工具栏固定状态
 * @param {boolean} pinned
 * @returns {$CancellablePromise<void>}
 */
export function SetToolBarPinned(pinned) {
    return $Call.ByID(2743625780, pinned);
}

/**
 * SetTransalteWay 设置当前翻译服务
 * @param {string} translateWay
 * @returns {$CancellablePromise<void>}
 */
export function SetTransalteWay(translateWay) {
    return $Call.ByID(1606326012, translateWay);
}

/**
 * Show 通过名字控制窗口事件
 * @param {string} windowName
 * @returns {$CancellablePromise<void>}
 */
export function Show(windowName) {
    return $Call.ByID(2781088484, windowName);
}

/**
 * ToolBarShow 显示工具弹窗，控制大小，布局, 前端调用，传递文本高度
 * @param {number} height
 * @returns {$CancellablePromise<void>}
 */
export function ToolBarShow(height) {
    return $Call.ByID(2532748761, height);
}

/**
 * Transalte 翻译逻辑
 * @param {string} queryText
 * @param {string} fromLang
 * @param {string} toLang
 * @returns {$CancellablePromise<string>}
 */
export function Transalte(queryText, fromLang, toLang) {
    return $Call.ByID(3553729015, queryText, fromLang, toLang);
}

/**
 * TransalteStream 流式翻译逻辑（仅支持 DeepSeek）
 * @param {string} queryText
 * @param {string} fromLang
 * @param {string} toLang
 * @returns {$CancellablePromise<void>}
 */
export function TransalteStream(queryText, fromLang, toLang) {
    return $Call.ByID(769859303, queryText, fromLang, toLang);
}
